pragma solidity ^0.5.11;

contract AtheiosGamerPrize {
    
    address public manager;
    address payable[] gamers;
    
    function tournamentManager() public {
        manager = msg.sender;
    } 
    
    function setGamer() public payable{
        gamers.push(msg.sender);
    }
    
    uint prize = 1;  //Function looking for
    uint winner = 1; //Function looking for
    
    function pickTheWinner() public restricted{
        //require(msg.sender == manager); // security
        gamers[winner].transfer(prize) ;
        gamers = new address payable[](0);
    }
    
    modifier restricted() {
    require(msg.sender == manager); // security
    _;
    }
    
    function getGamers() public view returns (address payable[] memory){
        return gamers;
    }

}
